@page "/content/{id:int}"
@using Tarea5.Data
@inject UserServices userServices
@inject SecretServices secretServices
@inject HttpClient Http


@if (state == "on")
{
    <div class="float-right">
        <img src="@image" class="rounded">
        <h6>@_data.Nombres</h6>
        <h6>@_data.Apellido1</h6>
        <h6>@_data.Apellido2</h6>
    </div>
    <div class="container">
        <div class="row-5">
            <div class="col-10 bg-light m-2 justify-content-start">
                <div class="p-3 mb-3 bg-secondary text-white text-center">Informacion del Secreto</div>
                <form @onsubmit="AddSecret">
                    <div class=" form-group">
                        <b>Titulo</b>
                        <input type="text" class="form-control" required @bind="_secret.Titulo" />
                    </div>
                    <div class=" form-group">
                        <b>Descripcion</b>
                        <input type="text" class="form-control" required @bind="_secret.Descripcion" />
                    </div>
                    <div class=" form-group">
                        <b>Valor Monetario</b>
                        <input type="number" step="0.01" class="form-control" required @bind="_secret.Valor_monetario" />
                    </div>
                    <div class=" form-group">
                        <b>Fecha</b>
                        <input type="date" class="form-control" required @bind="_secret.Fecha" />
                    </div>
                    <div class=" form-group">
                        <b>Lugar</b>
                        <input type="text" class="form-control" required @bind="_secret.Lugar" />
                    </div>
                    <div class=" form-group">
                        <b>Latitud</b>
                        <input type="number" step="0.00000000001" class="form-control" required @bind="_secret.Lat" />
                    </div>
                    <div class=" form-group">
                        <b>Longitud</b>
                        <input type="number" step="0.00000000001" class="form-control" required @bind="_secret.Lng" />
                    </div>
                    <div class="text-center p-3 mb-3">
                        <input type="submit" class="btn btn-primary" value="Create secret" />
                        <br />
                    </div>
                </form>
            </div>
      



    

            <table class="table">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Titulo</th>
                        <th scope="col">Descripcion</th>
                        <th scope="col">Valor Monetario</th>
                        <th scope="col">Fecha</th>
                        <th scope="col">Lugar</th>
                        <th scope="col">Latitud</th>
                        <th scope="col">Longitud</th>
                    </tr>
                </thead>
                @foreach (var secret in user_secrets)
                {
                    <tbody>
                        <tr>

                            <td>@secret.Titulo</td>
                            <td>@secret.Descripcion</td>
                            <td>@secret.Valor_monetario</td>
                            <td>@secret.Fecha</td>
                            <td>@secret.Lugar</td>
                            <td>@secret.Lat</td>
                            <td>@secret.Lng</td>

                        </tr>

                    </tbody>
                }
            </table>


        </div>
    </div>










}
else if (state == null)
{
    <center><h1>Loading data...</h1></center>
}
else if (state == "off")
{
    <center>
        <h3>Debes de registrarte primero</h3>
        <NavLink class="nav-link" href="/">
            <a>Back to Log In</a>
        </NavLink>
    </center>
}


@code {
    [Parameter]
    public int id { get; set; }

    private List<User> _users = new List<User>();
    private List<Secret> _secrets = new List<Secret>();
    private List<Secret> user_secrets = new List<Secret>();
    private User _user = new User();
    private Secret _secret = new Secret();
    private ApiData _data = new ApiData();
    private string image, state;

    protected override async Task OnInitializedAsync()
    {
        _users = await userServices.GetUsersAsync();
        _user = _users.FirstOrDefault(p => p.UserId == id);
        if (_user != null)
        {
            _data = await Http.GetJsonAsync<ApiData>("https://api.adamix.net/apec/cedula/" + _user.Cedula);
            image = _data.foto;
            await RefreshSecrets();
            state = _user.State;
            _user.State = "off";
            await userServices.UpdateUserAsync(_user);
        }
        else
        {
            state = "off";
        }
    }

    private async Task RefreshSecrets()
    {
        _secrets = await secretServices.GetSecretsAsync();
        user_secrets = _secrets.Where(p => p.UserId == id).ToList();
        _secret = new Secret();
    }

    private async Task AddSecret()
    {
        _user._Secrets.Add(_secret);
        await userServices.UpdateUserAsync(_user);
        await RefreshSecrets();
    }

}
